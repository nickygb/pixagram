{
  "name": "pixowlgram",
  "version": "1.0.0",
  "description": "PixowlGram",
  "main": "app.js",
  "repository": "https://github.com/nickygb/pixowlgram.git",
  "author": "nickygb <nicogrunfeld@gmail.com>",
  "license": "MIT",
  "devDependencies": {
    "@types/chai": "^4.2.14",
    "@types/chai-datetime": "^0.0.36",
    "@types/express": "^4.17.9",
    "@types/faker": "^5.1.5",
    "@types/mocha": "^8.2.0",
    "@types/s3rver": "^0.0.32",
    "@types/sinon": "^9.0.9",
    "@types/uuid": "^8.3.0",
    "@typescript-eslint/eslint-plugin": "^4.10.0",
    "@typescript-eslint/parser": "^4.10.0",
    "chai": "^4.2.0",
    "chai-datetime": "^1.7.0",
    "eslint": "^7.15.0",
    "faker": "^5.1.0",
    "mocha": "^8.2.1",
    "node-mocks-http": "^1.9.0",
    "nodemon": "^2.0.6",
    "openapi-typescript-codegen": "^0.7.2",
    "s3rver": "^3.6.1",
    "sinon": "^9.2.2",
    "sinon-test": "^3.0.0",
    "sql-fixtures": "^1.0.4",
    "sqlite3": "^5.0.0",
    "ts-mocha": "^8.0.0",
    "ts-node": "^9.1.1",
    "typescript": "^4.1.3"
  },
  "dependencies": {
    "aws-sdk": "^2.812.0",
    "body-parser": "^1.19.0",
    "express": "^4.17.1",
    "express-openapi-validator": "^4.9.2",
    "knex": "^0.21.14",
    "mysql": "^2.18.1",
    "uuid": "^8.3.2"
  },
  "scripts": {
    "restart": "yarn stop && yarn start",
    "start": "docker-compose up -d",
    "stop": "docker-compose down -v",
    "start:db": "docker-compose up -d mysql",
    "start:dev": "IS_OFFLINE=true nodemon --watch src --exec ts-node src/app.ts",
    "build": "yarn clean && tsc --build && yarn copy-files",
    "copy-files": "cp src/api-spec.yaml dist",
    "clean": "rm -rf ./dist",
    "db:migrate": "npx knex --knexfile src/knexfile.js migrate:latest",
    "db:migrate:up": "npx knex --knexfile src/knexfile.js migrate:up",
    "db:migrate:down": "npx knex --knexfile src/knexfile.js migrate:down",
    "db:seed": "ts-node db/seeds/seed.ts",
    "generate": "npx openapi -i src/api-spec.yaml -o src/generated -c node",
    "test:unit:storage": "mocha -r ts-node/register --extensions ts,tsx --watch --watch-files src --watch-files test test/unit/*.storage.**.ts -R list",
    "test:unit": "mocha -r ts-node/register --extensions ts,tsx --watch --watch-files src --watch-files test test/unit/*.**.ts -R list",
    "test:model": "mocha -r ts-node/register --extensions ts,tsx --watch --watch-files src --watch-files test 'test/postsController*.{ts,tsx}' -R list",
    "test:unit:controller:post": "mocha -r ts-node/register --extensions ts,tsx --watch --watch-files src --watch-files test 'test/postsController*.{ts,tsx}' -R list",
    "test": "mocha -r ts-node/register --extensions ts,tsx --watch --watch-files src --watch-files test 'test/**/*.{ts,tsx}' -R list"
  }
}
